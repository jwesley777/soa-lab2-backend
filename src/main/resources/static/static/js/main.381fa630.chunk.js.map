{"version":3,"sources":["utils/xmlUtils.js","components/App.js","index.js"],"names":["options","compact","textFn","value","parentElement","keyNo","Object","keys","_parent","length","keyName","nValue","Number","isNaN","bValue","toLowerCase","nativeType","e","convert","require","App","useState","serverOutputMessage","setServerOutputMessage","useForm","registerCopy","register","handleSubmitCopy","handleSubmit","registerCancel","handleSubmitCancel","className","onSubmit","data","url","BOOKING_BASE","ticketId","personId","fetch","method","headers","then","response","text","console","log","result","xml2js","BookingResponseDTO","message","type","required","min","max","onClick","ReactDOM","render","document","getElementById"],"mappings":"4MAcO,IASIA,EAAU,CACjBC,SAAS,EAQTC,OAlBiC,SAAUC,EAAOC,GAClD,IACI,IAAIC,EAAQC,OAAOC,KAAKH,EAAcI,SAASC,OAC3CC,EAAUJ,OAAOC,KAAKH,EAAcI,SAASH,EAAQ,GACzDD,EAAcI,QAAQE,GAlBvB,SAAoBP,GACvB,IAAIQ,EAASC,OAAOT,GACpB,IAAKU,MAAMF,GACP,OAAOA,EAEX,IAAIG,EAASX,EAAMY,cACnB,MAAe,SAAXD,GAEkB,UAAXA,GAGJX,EAO8Ba,CAAWb,GAC9C,MAAOc,OAqBAC,EAAUC,EAAQ,I,OC4ChBC,MA/Ef,WAEE,MAAsDC,mBAAS,OAA/D,mBAAOC,EAAP,KAA4BC,EAA5B,KAEA,EAAmEC,cAAjDC,EAAlB,EAAQC,SAAsCC,EAA9C,EAAgCC,aAChC,EAAuEJ,cAArDK,EAAlB,EAAQH,SAAwCI,EAAhD,EAAkCF,aAqClC,OACE,sBAAKG,UAAU,MAAf,UACI,uBAAMC,SAAUL,GArCD,SAAAM,GACjB,IAAMC,EAAMC,qBAA6BF,EAAKG,SAAW,IAAMH,EAAKI,SACpEC,MAAMJ,EAAK,CACPK,OAAQ,MACRC,QAAS,CACP,eAAgB,oCAEnBC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAM,SAAAC,GACLE,QAAQC,IAAIH,GAEZ,IAAMI,EAAS5B,EAAQ6B,OAAOL,EAAU1C,GACxCuB,EAAuBuB,EAAOE,mBAAmBC,eAwBnD,UACI,ucACA,4BACI,8CAEI,mCAAOC,KAAK,UAAazB,EAAa,WAAY,CAAE0B,UAAU,EAAMC,IAAK,EAAGC,IAAK,aAGzF,4BACI,8CAEI,mCAAOH,KAAK,UAAazB,EAAa,WAAY,CAAE0B,UAAU,EAAMC,IAAK,EAAGC,IAAK,aAG7F,uBAAOH,KAAK,cAGZ,uBAAMlB,SAAUF,GArCC,SAAAG,GACrB,IAAMC,EAAMC,mBAA2BF,EAAKI,SAAW,UACvDC,MAAMJ,EAAK,CACPK,OAAQ,MACRC,QAAS,CACP,eAAgB,oCAEnBC,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAM,SAAAC,GACLE,QAAQC,IAAIH,EAASO,SAErB,IAAMH,EAAS5B,EAAQ6B,OAAOL,EAAU1C,GACxCuB,EAAuBuB,EAAOE,mBAAmBC,eAwBjD,UACI,waACA,4BACI,8CAEI,mCAAOC,KAAK,UAAarB,EAAe,WAAY,CAAEsB,UAAU,EAAMC,IAAK,EAAGC,IAAK,aAG3F,uBAAOH,KAAK,cAGhB,mBAAGI,QAAS,kBAAM/B,EAAuB,KAAzC,SAA+CD,GAC/C,mDAAsBA,W,eCzE9BiC,EAASC,OACD,cAAC,EAAD,IACJC,SAASC,eAAe,W","file":"static/js/main.381fa630.chunk.js","sourcesContent":["export function nativeType(value) {\r\n    var nValue = Number(value);\r\n    if (!isNaN(nValue)) {\r\n        return nValue;\r\n    }\r\n    var bValue = value.toLowerCase();\r\n    if (bValue === 'true') {\r\n        return true;\r\n    } else if (bValue === 'false') {\r\n        return false;\r\n    }\r\n    return value;\r\n}\r\n\r\nexport var removeJsonTextAttribute = function (value, parentElement) {\r\n    try {\r\n        var keyNo = Object.keys(parentElement._parent).length;\r\n        var keyName = Object.keys(parentElement._parent)[keyNo - 1];\r\n        parentElement._parent[keyName] = nativeType(value);\r\n    } catch (e) {\r\n    }\r\n}\r\n\r\nexport let options = {\r\n    compact: true,\r\n    /*trim: true,\r\n    ignoreDeclaration: true,\r\n    ignoreInstruction: true,\r\n    ignoreAttributes: true,\r\n    ignoreComment: true,\r\n    ignoreCdata: true,\r\n    ignoreDoctype: true,*/\r\n    textFn: removeJsonTextAttribute\r\n};\r\n\r\nexport let options1 = {\r\n    compact: true,\r\n    fullTagEmptyElement: true\r\n};\r\n\r\nexport const convert = require('xml-js');","import React, {useState} from 'react';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { BOOKING_BASE } from '../constants/backendConstants';\r\nimport {convert, options, options1} from \"../utils/xmlUtils\";\r\n\r\nfunction App() {\r\n        \r\n  const [serverOutputMessage, setServerOutputMessage] = useState(\"Kek\");\r\n\r\n  const { register: registerCopy, handleSubmit: handleSubmitCopy } = useForm();\r\n  const { register: registerCancel, handleSubmit: handleSubmitCancel } = useForm();\r\n\r\n  const onSubmitCopy = data => {\r\n      const url = BOOKING_BASE + 'sell/vip/' + data.ticketId + '/' + data.personId;\r\n      fetch(url, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/xml; charset=utf-8'\r\n          }\r\n      }).then(response => {\r\n          return response.text();\r\n      }).then (response => {\r\n          console.log(response);\r\n          //const convert = require('xml-js');\r\n          const result = convert.xml2js(response, options);\r\n          setServerOutputMessage(result.BookingResponseDTO.message);\r\n      });\r\n  };\r\n\r\n  const onSubmitCancel = data => {\r\n    const url = BOOKING_BASE + 'person/' + data.personId + '/cancel';\r\n    fetch(url, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/xml; charset=utf-8'\r\n        }\r\n    }).then(response => {\r\n        return response.text();\r\n    }).then (response => {\r\n        console.log(response.message);\r\n        //const convert = require('xml-js');\r\n        const result = convert.xml2js(response, options);\r\n        setServerOutputMessage(result.BookingResponseDTO.message);\r\n    });\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <form onSubmit={handleSubmitCopy(onSubmitCopy)}>\r\n            <p>скопировать указанный билет, создав такой же, но с категорией \"VIP\" и с удвоенной ценой</p>\r\n            <p>\r\n                <label>\r\n                    TicketId:\r\n                    <input type=\"number\" {...registerCopy(\"ticketId\", { required: true, min: 0, max: 1000 })} />\r\n                </label>\r\n            </p>\r\n            <p>\r\n                <label>\r\n                    PersonId:\r\n                    <input type=\"number\" {...registerCopy(\"personId\", { required: true, min: 0, max: 1000 })} />\r\n                </label>\r\n            </p>\r\n        <input type=\"submit\" />\r\n        </form>\r\n\r\n        <form onSubmit={handleSubmitCancel(onSubmitCancel)}>\r\n            <p>отменить все букирования указанного человека, удалив его id изо всех билетов</p>\r\n            <p>\r\n                <label>\r\n                    PersonId:\r\n                    <input type=\"number\" {...registerCancel(\"personId\", { required: true, min: 0, max: 1000 })} />\r\n                </label>\r\n            </p>\r\n            <input type=\"submit\" />\r\n        </form>\r\n\r\n        <p onClick={() => setServerOutputMessage(\"\")}>{serverOutputMessage && \r\n        <span>Server output: {serverOutputMessage}</span>\r\n        }</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import App from './components/App'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n\r\nReactDOM.render(\r\n        <App/>,\r\n    document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}